import os

class SimulationModule:
    def __init__(self):
        self.simulation_config = {}

    def set_geometry(self, source, detector, object_geometry):
        self.simulation_config['source'] = source
        self.simulation_config['detector'] = detector
        self.simulation_config['object_geometry'] = object_geometry

    def set_parameters(self, parameters):
        self.simulation_config['parameters'] = parameters

    def write_topas_input_file(self, filename):
        with open(filename, 'w') as file:
            # Write simulation configuration to TOPAS input file format
            file.write("# TOPAS input file generated by XIRS\n")
            source = self.simulation_config['source']
            detector = self.simulation_config['detector']
            object_geometry = self.simulation_config['object_geometry']
            parameters = self.simulation_config['parameters']

            file.write(f"s:Source Type = \"{source['type']}\"\n")
            file.write(f"s:Source.ParticleType = \"{source['particle_type']}\"\n")
            file.write(f"s:Source.Energy = \"{source['energy']} keV\"\n")
            file.write(f"s:Source.Position = \"{source['position']}\"\n")
            file.write(f"s:Source.Direction = \"{source['direction']}\"\n")
            file.write(f"s:Source.BeamSpread = \"{source['beam_spread']}\"\n")

            file.write(f"s:Detector Type = \"{detector['type']}\"\n")
            file.write(f"s:Detector.Material = \"{detector['material']}\"\n")
            file.write(f"s:Detector.Size = \"{detector['size']} mm\"\n")
            file.write(f"s:Detector.Bins = \"{detector['bins']}\"\n")
            file.write(f"s:Detector.Position = \"{detector['position']}\"\n")
            file.write(f"s:Detector.OutputFile = \"{detector['output_file']}\"\n")

            file.write(f"s:Phantom.Name = \"{object_geometry['name']}\"\n")
            file.write(f"s:Phantom.Material = \"{object_geometry['material']}\"\n")
            file.write(f"s:Phantom.Size = \"{object_geometry['size']} mm\"\n")
            file.write(f"s:Phantom.VoxelMaterial = \"{object_geometry['voxel_material']}\"\n")
            file.write(f"s:Phantom.VoxelDataFile = \"{object_geometry['voxel_data_file']}\"\n")
            file.write(f"s:Phantom.VoxelDataType = \"{object_geometry['voxel_data_type']}\"\n")
            file.write(f"s:Phantom.VoxelGridSize = \"{object_geometry['voxel_grid_size']}\"\n")

            for key, value in parameters.items():
                file.write(f"{key} = \"{value}\"\n")

    def run_simulation(self, input_filename):
        os.system(f"topas {input_filename}")

# Example usage
if __name__ == "__main__":
    sim = SimulationModule()
    source_config = {
        "type": "Beam",
        "particle_type": "xray",
        "energy": 100,
        "position": "0 0 -300",
        "direction": "0 0 1",
        "beam_spread": "0 0"
    }
    detector_config = {
        "type": "SimpleDetector",
        "material": "G4_WATER",
        "size": "256 256 1",
        "bins": "256 256 1",
        "position": "0 0 300",
        "output_file": "projections.txt"
    }
    object_geometry_config = {
        "name": "SheppLoganPhantom",
        "material": "Water",
        "size": "256 256 256",
        "voxel_material": "Water",
        "voxel_data_file": "SheppLoganPhantom.raw",
        "voxel_data_type": "float",
        "voxel_grid_size": "256 256 256"
    }
    parameters = {
        "s:Run.NumberOfHistories": "1000000"
    }

    sim.set_geometry(source_config, detector_config, object_geometry_config)
    sim.set_parameters(parameters)
    sim.write_topas_input_file("SheppLoganImaging.txt")
    sim.run_simulation("SheppLoganImaging.txt")

